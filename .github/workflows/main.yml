name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=rahulb15
            -Dsonar.projectKey=rahulb15_K-Backend-New

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarcloud]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kryptomerchbackend:latest
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            CLIENT_URL=${{ secrets.CLIENT_URL }}
            ADMIN_URL=${{ secrets.ADMIN_URL }}
            JWT_USER_SECRET=${{ secrets.JWT_USER_SECRET }}
            JWT_ADMIN_SECRET=${{ secrets.JWT_ADMIN_SECRET }}
            BASE_URL=${{ secrets.BASE_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            PORT_DEV=${{ secrets.PORT_DEV }}
            DB_URL_DEV=${{ secrets.DB_URL_DEV }}
            PORT_PROD=${{ secrets.PORT_PROD }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            PORT_TEST=${{ secrets.PORT_TEST }}
            DB_URL_TEST=${{ secrets.DB_URL_TEST }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
            CLAUDE_SECRET=${{ secrets.CLAUDE_SECRET }}
            CLAUDE_MODEL=${{ secrets.CLAUDE_MODEL }}
            CLAUDE_MAX_TOKENS=${{ secrets.CLAUDE_MAX_TOKENS }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            SUMSUB_SECRET_KEY=${{ secrets.SUMSUB_SECRET_KEY }}
            SUMSUB_APP_TOKEN=${{ secrets.SUMSUB_APP_TOKEN }}
            SUMSUB_LEVEL_NAME=${{ secrets.SUMSUB_LEVEL_NAME }}
            RAPIDAPI_KEY=${{ secrets.RAPIDAPI_KEY }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_PORT=${{ secrets.MAIL_PORT }}
            MAIL_USER=${{ secrets.MAIL_USER }}
            MAIL_PASS=${{ secrets.MAIL_PASS }}
